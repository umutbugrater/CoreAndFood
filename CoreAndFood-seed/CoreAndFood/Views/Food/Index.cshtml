@using X.PagedList
@using X.PagedList.Mvc.Core


@model IPagedList<Food>

@{
    ViewData["Title"] = "Index";
}

<h1>FOOD LIST</h1>
<br />
<table class="table table-bordered">
    <tr>
        <th>ID</th>
        <th>Food Name</th>
        <th>Price</th>
        <th>Stock</th>
        <th>Category Name</th>
        <th>Delete</th>
        <th>Update</th>
        <th>Details</th>
    </tr>

    @foreach (var x in Model)
    {
        <tr>
            <th>@x.FoodID</th>
            <td>@x.Name</td>
            <td>@x.Price</td>
            <td>@x.Stock</td>
            <td>@x.Category?.CategoryName </td>
            <td> <a asp-controller="Food" asp-action="DeleteFood" asp-route-id="@x.FoodID" class="btn btn-danger">Delete</a>  </td>
            <td> <a asp-controller="Food" asp-action="FoodGet" asp-route-id="@x.FoodID" class="btn btn-success">Update</a>  </td>
            <td> <a href="#" class="btn btn-info">Details</a>  </td>
        </tr>
    }
</table>

@Html.PagedListPager((IPagedList)Model,page=>Url.Action("Index",new {page}))
<a asp-action="AddFood" asp-controller="Food" class="btn btn-primary">New Food</a>

